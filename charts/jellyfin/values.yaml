# Default values for jellyfin.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: jellyfin/jellyfin
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "10.8.10"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext:
  runAsUser: 1000
  fsGroup: 1000
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: LoadBalancer
  port: 8096

ingress:
  enabled: true
  className: "traefik"
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: jellyfin.avril
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector:
  architecture: x86

tolerations:
- key: architecture
  operator: Equal
  value: x86

affinity: {}

# Custom values below here

# This approach is still pretty lacking:
# - No type-checking
# - Assumes NFS
# - replication of nfsServer
#
# But hey, this is for my own use anyway. If people start referencing it, I can improve it! :P
volumes:
  - name: cache
    config:
      size: 2G
      accessMode: ReadWriteMany
      className: longhorn
  - name: config
    config:
      size: 100M
      accessMode: ReadWriteMany
      className: longhorn
  - name: media
    config:
      size: 200G
      accessMode: ReadOnlyMany
      className: longhorn

metricsImage:
  repository: gitea.scubbo.org/scubbo/jellyfin-library-count-prometheus-exporter
  tag: latest

metrics:
  apiUrl: "http://jellyfin.avril"
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchExpressions:
          - key: kubernetes.io/arch
            operator: In
            values:
            - arm64

